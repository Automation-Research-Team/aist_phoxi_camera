#!/usr/bin/env python
PACKAGE = "blob_test"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("min_threshold_param",    double_t,    0, "An Integer parameter", 100,  0, 1000)
gen.add("max_threshold_param", double_t, 0, "A double parameter",    400, 0,   1000)
gen.add("threshold_step_param", double_t, 0, "A double parameter",    .5, 0,   1)

gen.add("minDistBetweenBlobs_param", double_t, 0, "A double parameter",    .5, 0,   1)

gen.add("filterByColor_param",   bool_t,   0, "A Boolean parameter",  True)
gen.add("blobColor_param", int_t, 0, "A double parameter",    0, 0,  255)

gen.add("filterByArea_param",   bool_t,   0, "A Boolean parameter",  True)
gen.add("minArea_param", double_t, 0, "A double parameter",    20, 0,   10000)
gen.add("maxArea_param", double_t, 0, "A double parameter",    150, 0,   10000)

gen.add("filterByCircularity_param",   bool_t,   0, "A Boolean parameter",  True)
gen.add("minCircularity_param", double_t, 0, "A double parameter",    .7, 0,   10)
gen.add("maxCircularity_param", double_t, 0, "A double parameter",    10, 0,   10)

gen.add("filterByConvexity_param",   bool_t,   0, "A Boolean parameter",  False)
gen.add("minConvexity_param", double_t, 0, "A double parameter",    0.87, 0,   1)
gen.add("maxConvexity_param", double_t, 0, "A double parameter",    10, 0,   1)

gen.add("filterByInertia_param",   bool_t,   0, "A Boolean parameter",  False)
gen.add("minInertiaRatio_param", double_t, 0, "A double parameter",    0.1, 0,   1)
gen.add("maxInertiaRatio_param", double_t, 0, "A double parameter",    0.5, 0,   1)

exit(gen.generate(PACKAGE, "blob_test", "O2asBlobDetection"))

